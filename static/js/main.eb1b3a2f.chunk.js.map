{"version":3,"sources":["component/Navbar.jsx","component/Sidenav.js","component/Top.jsx","component/Cardtask.jsx","component/Crd.jsx","Layout/Mainlayout.jsx","App.js","reportWebVitals.js","index.js"],"names":["Navbar","React","createElement","className","href","type","data-bs-toggle","data-bs-target","placeholder","xmlns","width","height","fill","class","viewBox","d","Sidenav","src","alt","Top","Cardtask","props","console","log","id","descdata","datedata","tabindex","aria-labelledby","aria-hidden","data-bs-dismiss","aria-label","value","required","rows","htmlFor","name","for","checked","Crd","tododatas","todo_data","progressdatas","progress_data","donedatas","task_done_data","map","tododata","key","desc","date","progressdata","donedata","Mainlayout","_useState","useState","_useState2","_slicedToArray","setdesc","_useState3","_useState4","status","setstatus","_useState5","_useState6","setdate","statusHandler","event","target","_useState7","_useState8","settodo_data","_useState9","_useState10","setprogress_data","_useState11","_useState12","settask_done_data","action","onSubmit","preventDefault","data","Math","random","toString","concat","_toConsumableArray","onChange","App","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.eb1b3a2f.chunk.js","sourcesContent":["import './Navbar.css';\r\nimport React from 'react';\r\nconst Navbar = () => {\r\n    return (\r\n        <div>\r\n            <nav className='mynav'>\r\n                <div className=\"first-container\">\r\n                    <div className=\"create-task-btn\">\r\n                        <a href=\"#\" type='button' data-bs-toggle=\"modal\" data-bs-target=\"#createmodal\">Create task</a>\r\n                    </div>\r\n                    <div className=\"srch\">\r\n                        <input type=\"search\" placeholder='Search your query' />\r\n                        <button><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-search\" viewBox=\"0 0 16 16\">\r\n                            <path d=\"M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001c.03.04.062.078.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1.007 1.007 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0z\" />\r\n                        </svg></button>\r\n                    </div>\r\n\r\n                </div>\r\n                <div className=\"second-container\"></div>\r\n            </nav>\r\n\r\n           \r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Navbar;","import './Sidenav.css';\r\nimport React from 'react';\r\nconst Sidenav = () => {\r\n    return (\r\n        <div>\r\n            <ul className='sidenav'>\r\n                <div>\r\n                    <img src=\"#\" alt=\"\" />\r\n                </div>\r\n                <li className='sidenav-item1'>\r\n                    <div className=\"img\"></div>\r\n                    <a href=\"#\">First</a>\r\n                </li>\r\n\r\n                <li className='sidenav-item2'>\r\n                    <div className=\"img\"></div>\r\n                    <a href=\"#\">Second</a>\r\n                </li>\r\n\r\n\r\n                <li className='sidenav-item3'>\r\n                    <div className=\"img\"></div>\r\n                    <a href=\"#\">Third</a>\r\n                </li>\r\n\r\n                <li className='sidenav-item4'>\r\n                    <div className=\"img\"></div>\r\n                    <a href=\"#\">Fourth</a>\r\n                </li>\r\n                <li className='sidenav-item5'>\r\n                    <div className=\"img\"></div>\r\n                    <a href=\"#\">Fourth</a>\r\n                </li>\r\n\r\n\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\nexport default Sidenav;","import './Top.css';\r\nimport React from 'react';\r\nconst Top=()=>{\r\n    return(\r\n        <div className=\"top\">\r\n            <div className=\"top-img\">\r\n                <img src=\"#\" alt=\"\" />\r\n            </div>\r\n            <div className=\"top-heading\">\r\n            <h1>Website Development Tracker</h1>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Top;","import './Card.css';\r\nimport React from 'react';\r\nconst Cardtask = (props) => {\r\n    console.log( props.id);\r\n    \r\n    return (\r\n        <div>\r\n        <a href=\"#\" type=\"button\" data-bs-toggle=\"modal\" data-bs-target=\"#upmodal\">\r\n            <div className=\"crd-task\">\r\n                \r\n                <p>{props.descdata}</p>\r\n                { props.datedata && <p><span>Due Date:</span> {props.datedata}</p>}\r\n                \r\n            </div>\r\n        </a>\r\n\r\n        {/* Modal */}\r\n        <div className=\"modal fade\" id=\"upmodal\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n            <div className=\"modal-dialog\">\r\n                <div className=\"modal-content\">\r\n                    <div className=\"modal-header\">\r\n                        <h1 className=\"modal-title fs-5\" id=\"exampleModalLabel\">Create a task for the team</h1>\r\n                        <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n                    </div>\r\n                    <div className=\"modal-body\">\r\n                        <div className=\"description mb-3\">\r\n                            <label className=\"form-label\">Add a description</label>\r\n                            <textarea value={props.descdata} required className=\"form-control\" rows=\"3\"></textarea>\r\n                        </div>\r\n                        <label htmlFor=\"\">Select task status</label>\r\n                        <div className='add-status'>\r\n    \r\n                            <div className=\"form-check\">\r\n    \r\n                                <input className=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault\"\r\n                                    id=\"flexRadioDefault1\" />\r\n                                <label className=\"form-check-label\" for=\"flexRadioDefault1\">\r\n                                    To do\r\n                                </label>\r\n                            </div>\r\n                            <div className=\"form-check\">\r\n                                <input className=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault\" id=\"flexRadioDefault2\"\r\n                                    checked />\r\n                                <label className=\"form-check-label\" for=\"flexRadioDefault2\">\r\n                                    In progress\r\n                                </label>\r\n                            </div>\r\n                            <div className=\"form-check\">\r\n                                <input className=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault\" id=\"flexRadioDefault2\"\r\n                                    checked />\r\n                                <label className=\"form-check-label\" for=\"flexRadioDefault2\">\r\n                                    Task done\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n    \r\n                        <div className=\"date\">\r\n                            <label htmlFor=\"\">Due date</label>\r\n                            <input value={props.datedata} type=\"date\" />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"modal-footer\">\r\n                        <button type=\"button\" className=\"btn btn-danger\">Update Task</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Cardtask;","import \"./Card.css\";\r\nimport Cardtask from \"./Cardtask\";\r\nimport React from 'react';\r\nconst Crd = (props) => {\r\n    let tododatas=props.todo_data;\r\n    let progressdatas = props.progress_data;\r\n    let donedatas = props.task_done_data;\r\n    return (\r\n        <div>\r\n        <div className=\"crd-container\">\r\n\r\n            <div className=\"crd card1\">\r\n                <div className=\"card1-item   crd-item\">\r\n                    <h2>Task to do</h2>\r\n                    <hr/>\r\n                    {\r\n                        tododatas.map((tododata)=> <Cardtask key={tododata.id}  descdata={tododata.desc} datedata={tododata.date} />)\r\n                    }\r\n                       \r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"crd card2\">\r\n                <div className=\"card2-item  crd-item\">\r\n                <h2>In progress</h2>\r\n                    <hr/>\r\n                    {\r\n                        progressdatas.map((progressdata)=><Cardtask descdata={progressdata.desc} datedata={progressdata.date}/>)\r\n                    }\r\n                    \r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"crd card3\">\r\n                <div className=\"card3-item  crd-item\">\r\n                <h2>Task done</h2>\r\n                    <hr/>\r\n                    {\r\n                        donedatas.map((donedata)=><Cardtask descdata={donedata.desc} datedata={donedata.date}/>)\r\n                    }\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n\r\n       \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Crd;","import './Mainlayout.css';\r\nimport React from 'react';\r\nimport Navbar from '../component/Navbar';\r\nimport Sidenav from '../component/Sidenav';\r\nimport Top from '../component/Top';\r\nimport { useState } from 'react';\r\nimport Crd from '../component/Crd';\r\n\r\nconst Mainlayout = () => {\r\n\r\n    let [desc,setdesc]=useState('');\r\n    let [status, setstatus]=useState('');\r\n    let [date, setdate]=useState('');\r\n\r\n    const descHandler =(event)=>{\r\n        setdesc(event.target.value)\r\n    }\r\n\r\n    const statusHandler =(event)=>{\r\n        setstatus(event.target.value)\r\n    }\r\n\r\n    const dateHandler =(event)=>{\r\n        setdate(event.target.value)\r\n    }\r\n\r\n\r\n    let todo_data_dummy=[\r\n        {\r\n            id:1,\r\n            desc:\"lorem ipsum  lorem ipsum  lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum  \",\r\n            date:\"16-5-2023\"\r\n        },\r\n        {\r\n            id:2,\r\n            desc:\"lorem ipsum  lorem ipsum  lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum  \",\r\n            date:\"16-5-2023\"\r\n        },\r\n    ]\r\n\r\n    let progress_data_dummy=[\r\n        {\r\n            id:1,\r\n            desc:'lorem ipsum  lorem ipsum  lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum  ',\r\n            date:'16-3-2023'\r\n        },\r\n        {\r\n            id:2,\r\n            desc:'lorem ipsum  lorem ipsum  lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum  ',\r\n            date:'16-3-2023'\r\n        },\r\n    ]\r\n\r\n    let task_done_data_dummy=[\r\n        {\r\n            id:1,\r\n            desc:'lorem ipsum  lorem ipsum  lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum  ',\r\n            date:'16-3-2022'\r\n        },\r\n        {\r\n            id:2,\r\n            desc:'lorem ipsum  lorem ipsum  lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum  ',\r\n            date:'16-3-2022'\r\n        },\r\n    ]\r\n    \r\n    const [todo_data,settodo_data]=useState(todo_data_dummy);\r\n    const [progress_data,setprogress_data]=useState(progress_data_dummy);\r\n    const [task_done_data,settask_done_data]=useState(task_done_data_dummy)\r\n\r\n    const submitHamdler=(event)=>{\r\n        event.preventDefault();\r\n        let data ={\r\n            id:Math.random().toString(),\r\n            desc:desc,\r\n            date:date,\r\n        }\r\n        console.log(data)\r\n        if (status ==\"todo\"){\r\n            settodo_data([data,...todo_data])\r\n            \r\n        }\r\n        else if (status==\"inprogress\"){\r\n            setprogress_data([data,...progress_data])\r\n        }\r\n        else{\r\n            settask_done_data([data,...task_done_data])\r\n        }\r\n\r\n        setdate('');\r\n        setdesc('');\r\n        setstatus('');\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"ctnr\">\r\n                <div className=\"sidenav\">\r\n                    <Sidenav />\r\n                </div>\r\n\r\n                {/* <!-- header --> */}\r\n                <div className=\"mynav\">\r\n                    <Navbar />\r\n                </div>\r\n\r\n                {/* <!-- top --> */}\r\n                <div className=\"top\">\r\n                    <Top />\r\n                </div>\r\n\r\n                {/* <!-- card --> */}\r\n                <div className=\"crd-container\">\r\n                    <Crd todo_data={todo_data} progress_data={progress_data} task_done_data={task_done_data} />\r\n                </div>\r\n            </div>\r\n\r\n\r\n            {/* Modal */}\r\n            <div className=\"modal fade\" id=\"createmodal\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n                <form action=\"\" onSubmit={submitHamdler}>\r\n                    <div className=\"modal-dialog\">\r\n                        <div className=\"modal-content\">\r\n                            <div className=\"modal-header\">\r\n                                <h1 className=\"modal-title fs-5\" id=\"exampleModalLabel\">Create a task for the team</h1>\r\n                                <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n                            </div>\r\n                            <div className=\"modal-body\">\r\n                                <div className=\"description mb-3\">\r\n                                    <label className=\"form-label\">Add a description</label>\r\n                                    <textarea value={desc} onChange={descHandler} required className=\"form-control\" rows=\"3\"></textarea>\r\n                                </div>\r\n                                <label htmlFor=\"\">Select task status</label>\r\n                                <div className='add-status' >\r\n\r\n                                    <div className=\"form-check\">\r\n\r\n                                        <input className=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault\"\r\n                                           onChange={statusHandler}  id=\"flexRadioDefault1\" value=\"todo\"/>\r\n                                        <label className=\"form-check-label\" for=\"flexRadioDefault1\">\r\n                                            To do\r\n                                        </label>\r\n                                    </div>\r\n                                    <div className=\"form-check\">\r\n                                        <input className=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault\" id=\"flexRadioDefault2\"\r\n                                           onChange={statusHandler} value='inprogress'/>\r\n                                        <label className=\"form-check-label\" for=\"flexRadioDefault2\">\r\n                                            In progress\r\n                                        </label>\r\n                                    </div>\r\n                                    <div className=\"form-check\">\r\n                                        <input className=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault\" id=\"flexRadioDefault2\"\r\n                                             onChange={statusHandler} value=\"taskdone\"/>\r\n                                        <label className=\"form-check-label\" for=\"flexRadioDefault2\">\r\n                                            Task done\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"date\">\r\n                                    <label htmlFor=\"\">Due date</label>\r\n                                    <input value={date} onChange={dateHandler} type=\"date\" />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"modal-footer\">\r\n                                <button type=\"submit\" className=\"submit-btn btn btn-primary\">Create Task</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Mainlayout;","\nimport Mainlayout from './Layout/Mainlayout';\nimport './App.css';\nimport React from 'react';\nfunction App() {\n  return (\n    <div className=\"App\">\n     <Mainlayout/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}